package Views;

import Controller.ImageManipulator;
import com.placeholder.PlaceHolder;
import java.awt.Color;
import java.awt.Font;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.imageio.ImageReader;
import javax.imageio.stream.ImageInputStream;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JScrollPane;
import javax.swing.SpinnerNumberModel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;

public class ImageEditor extends javax.swing.JFrame {

    ImageManipulator imageController;
    File fileUploaded;
    BufferedImage imageUploaded;
    PlaceHolder cropHeigthHolder;
    PlaceHolder cropWidthHolder;
    PlaceHolder cropXHolder;
    PlaceHolder cropYHolder;
    PlaceHolder scaleWidthHolder;
    PlaceHolder scaleHeigthHolder;
    PlaceHolder translateXHolder;
    PlaceHolder translateYHolder;
    boolean isChangingToDarkMode = false;
    
    SpinnerNumberModel spinnerModel = new SpinnerNumberModel(0, -360, 360, 1); 

    /**
     * Creates new form Editor
     */
    public ImageEditor() {
        initComponents();
        imageController = new ImageManipulator();
        fileUploaded = null;
        imageUploaded = null;

        cropWidthHolder = new PlaceHolder(tfCropWidth, Color.GRAY, Color.BLACK, "Comp", false, Font.SANS_SERIF, 13);
        cropHeigthHolder = new PlaceHolder(tfCropHeigth, Color.GRAY, Color.BLACK, "Alt", false, Font.SANS_SERIF, 13);
        cropXHolder = new PlaceHolder(tfCropX, Color.GRAY, Color.BLACK, "X", false, Font.SANS_SERIF, 13);
        cropYHolder = new PlaceHolder(tfCropY, Color.GRAY, Color.BLACK, "Y", false, Font.SANS_SERIF, 13);
        scaleWidthHolder = new PlaceHolder(tfScaleWidth, Color.GRAY, Color.BLACK, "Comp", false, Font.SANS_SERIF, 13);
        scaleHeigthHolder = new PlaceHolder(tfScaleHeigth, Color.GRAY, Color.BLACK, "Alt", false, Font.SANS_SERIF, 13);
        translateXHolder = new PlaceHolder(tfTranslateX, Color.GRAY, Color.BLACK, "X", false, Font.SANS_SERIF, 13);
        translateYHolder = new PlaceHolder(tfTranslateY, Color.GRAY, Color.BLACK, "Y", false, Font.SANS_SERIF, 13);
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnWindowPanel = new javax.swing.JPanel();
        pnNavBar = new javax.swing.JPanel();
        btnCrop = new javax.swing.JButton();
        tfCropWidth = new javax.swing.JTextField();
        tfCropHeigth = new javax.swing.JTextField();
        tfCropX = new javax.swing.JTextField();
        tfCropY = new javax.swing.JTextField();
        btnScale = new javax.swing.JButton();
        tfScaleWidth = new javax.swing.JTextField();
        tfScaleHeigth = new javax.swing.JTextField();
        lbMoveImage = new javax.swing.JLabel();
        lbCropImage = new javax.swing.JLabel();
        lbRotateImage = new javax.swing.JLabel();
        btnRotate = new javax.swing.JButton();
        btnUploadImage = new javax.swing.JButton();
        lbLogo = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        tfTranslateX = new javax.swing.JTextField();
        tfTranslateY = new javax.swing.JTextField();
        btnMove = new javax.swing.JButton();
        lbScalateImage = new javax.swing.JLabel();
        rotatingDegreesInCelcius = new javax.swing.JSpinner(spinnerModel);
        btnDrag = new javax.swing.JToggleButton();
        scrollPanel = new javax.swing.JScrollPane();
        imageLabel = new javax.swing.JLabel();
        lbDimensions = new javax.swing.JLabel();
        lbX = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lbY = new javax.swing.JLabel();
        btnMode = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(21, 23, 24));
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        pnWindowPanel.setBackground(new java.awt.Color(21, 23, 24));

        pnNavBar.setBackground(new java.awt.Color(35, 38, 39));
        pnNavBar.setPreferredSize(new java.awt.Dimension(228, 760));

        btnCrop.setText("Cortar Imagem");
        btnCrop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCropActionPerformed(evt);
            }
        });

        tfCropWidth.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        tfCropHeigth.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        tfCropX.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        tfCropY.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnScale.setText("Escalar");
        btnScale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnScaleActionPerformed(evt);
            }
        });

        tfScaleWidth.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        tfScaleHeigth.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lbMoveImage.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbMoveImage.setForeground(new java.awt.Color(242, 242, 242));
        lbMoveImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbMoveImage.setText("Mover Imagem");

        lbCropImage.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbCropImage.setForeground(new java.awt.Color(242, 242, 242));
        lbCropImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbCropImage.setText("Cortar Imagem");

        lbRotateImage.setBackground(new java.awt.Color(255, 255, 255));
        lbRotateImage.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbRotateImage.setForeground(new java.awt.Color(242, 242, 242));
        lbRotateImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbRotateImage.setText("Girar Imagem");

        btnRotate.setText("Girar");
        btnRotate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRotateActionPerformed(evt);
            }
        });

        btnUploadImage.setBackground(new java.awt.Color(242, 242, 242));
        btnUploadImage.setText("Carregar Imagem");
        btnUploadImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadImageActionPerformed(evt);
            }
        });

        lbLogo.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lbLogo.setForeground(new java.awt.Color(255, 255, 255));
        lbLogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbLogo.setText("Picassadas");

        btnSave.setBackground(new java.awt.Color(38, 86, 186));
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("Salvar");
        btnSave.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnSave.setContentAreaFilled(false);
        btnSave.setOpaque(true);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        tfTranslateX.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        tfTranslateY.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfTranslateY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTranslateYActionPerformed(evt);
            }
        });

        btnMove.setText("Mover Imagem");
        btnMove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoveActionPerformed(evt);
            }
        });

        lbScalateImage.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbScalateImage.setForeground(new java.awt.Color(242, 242, 242));
        lbScalateImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbScalateImage.setText("Escalar Imagem");

        btnDrag.setText("drag");
        btnDrag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDragActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnNavBarLayout = new javax.swing.GroupLayout(pnNavBar);
        pnNavBar.setLayout(pnNavBarLayout);
        pnNavBarLayout.setHorizontalGroup(
            pnNavBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnNavBarLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(pnNavBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnNavBarLayout.createSequentialGroup()
                        .addGroup(pnNavBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnMove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbRotateImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnRotate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnUploadImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbLogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbScalateImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCrop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pnNavBarLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(pnNavBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnNavBarLayout.createSequentialGroup()
                                        .addComponent(tfCropX, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tfCropY))
                                    .addGroup(pnNavBarLayout.createSequentialGroup()
                                        .addGroup(pnNavBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(pnNavBarLayout.createSequentialGroup()
                                                .addComponent(tfCropWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(tfCropHeigth, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(pnNavBarLayout.createSequentialGroup()
                                                .addComponent(tfScaleWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(tfScaleHeigth, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnNavBarLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(tfTranslateX, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfTranslateY, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lbCropImage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnScale, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(112, 112, 112))
                    .addGroup(pnNavBarLayout.createSequentialGroup()
                        .addComponent(lbMoveImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDrag)
                        .addGap(107, 107, 107))))
            .addGroup(pnNavBarLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(rotatingDegreesInCelcius, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnNavBarLayout.setVerticalGroup(
            pnNavBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnNavBarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(btnUploadImage, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(lbRotateImage, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rotatingDegreesInCelcius, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRotate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(lbCropImage, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnNavBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfCropWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfCropHeigth, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnNavBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tfCropX)
                    .addComponent(tfCropY, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCrop, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbScalateImage, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnNavBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfScaleHeigth, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfScaleWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnScale, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(pnNavBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbMoveImage, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDrag))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnNavBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfTranslateX, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfTranslateY, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMove, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        scrollPanel.setBackground(new java.awt.Color(30, 31, 31));

        imageLabel.setBackground(new java.awt.Color(30, 31, 31));
        imageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imageLabel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                imageLabelMouseDragged(evt);
            }
        });
        imageLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                imageLabelMousePressed(evt);
            }
        });
        scrollPanel.setViewportView(imageLabel);

        lbDimensions.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lbDimensions.setForeground(new java.awt.Color(255, 255, 255));
        lbDimensions.setText("Dimensões:");

        lbX.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lbX.setForeground(new java.awt.Color(255, 255, 255));
        lbX.setText("x = (X)");

        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("x = (X)");

        lbY.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lbY.setForeground(new java.awt.Color(255, 255, 255));
        lbY.setText("y = (Y)");

        btnMode.setText("mode");
        btnMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnWindowPanelLayout = new javax.swing.GroupLayout(pnWindowPanel);
        pnWindowPanel.setLayout(pnWindowPanelLayout);
        pnWindowPanelLayout.setHorizontalGroup(
            pnWindowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnWindowPanelLayout.createSequentialGroup()
                .addGroup(pnWindowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnWindowPanelLayout.createSequentialGroup()
                        .addContainerGap(53, Short.MAX_VALUE)
                        .addComponent(scrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 873, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(pnWindowPanelLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(lbDimensions)
                        .addGap(37, 37, 37)
                        .addComponent(lbX)
                        .addGroup(pnWindowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnWindowPanelLayout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addComponent(jLabel8))
                            .addGroup(pnWindowPanelLayout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(lbY)))
                        .addGap(433, 433, 433)
                        .addComponent(btnMode)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(pnNavBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnWindowPanelLayout.setVerticalGroup(
            pnWindowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnWindowPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnWindowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnWindowPanelLayout.createSequentialGroup()
                        .addGroup(pnWindowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnWindowPanelLayout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnWindowPanelLayout.createSequentialGroup()
                                .addGroup(pnWindowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lbX, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbDimensions, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbY, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnMode))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addComponent(scrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnNavBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        getContentPane().add(pnWindowPanel);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnMoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoveActionPerformed
        if (imageUploaded == null) {
            return;
        }

        if (tfTranslateX.getText().equals(translateXHolder.getTextoHolder()) || tfTranslateY.getText().equals(translateYHolder.getTextoHolder())) {
            return;
        }

        if (tfTranslateX.getText().isEmpty() || tfTranslateY.getText().isEmpty()) {
            return;
        }
        
        int locationX = imageLabel.getLocation().x + Integer.parseInt(tfTranslateX.getText());
        int locationY = imageLabel.getLocation().y + Integer.parseInt(tfTranslateY.getText());

        imageLabel.setLocation(locationX, locationY);
        
        
        lbY.setText("y = " + imageUploaded.getHeight());
        lbX.setText("x = " + imageUploaded.getWidth());
        
        ImageIcon icon = new ImageIcon(imageUploaded);
        imageLabel.setIcon(icon);

    }//GEN-LAST:event_btnMoveActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (fileUploaded == null || imageUploaded == null) {
            return;
        }

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Specify a file to save");
        int result = fileChooser.showSaveDialog(null);

        if (result == JFileChooser.APPROVE_OPTION) {
            try {
                ImageInputStream imageInputStream = ImageIO.createImageInputStream(fileUploaded);
                Iterator<ImageReader> iterator = ImageIO.getImageReaders(imageInputStream);
                ImageReader imageReader = iterator.next();

                File selectedFile = fileChooser.getSelectedFile();
                selectedFile = new File(selectedFile.getCanonicalPath() + "." + imageReader.getFormatName());

                ImageIO.write(imageUploaded, imageReader.getFormatName(), selectedFile);
            } catch (IOException ex) {
                Logger.getLogger(ImageEditor.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUploadImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadImageActionPerformed
        JFileChooser fileChooser = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.setDialogTitle("Select Image");
        FileNameExtensionFilter restrict = new FileNameExtensionFilter("Only images", "png", "jpg", "jpeg");
        fileChooser.addChoosableFileFilter(restrict);

        int result = fileChooser.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            try {
                imageUploaded = ImageIO.read(fileChooser.getSelectedFile().getAbsoluteFile());
                fileUploaded = fileChooser.getSelectedFile().getAbsoluteFile();
            } catch (IOException ex) {
                Logger.getLogger(ImageEditor.class.getName()).log(Level.SEVERE, null, ex);
            }
            lbY.setText("y = " + imageUploaded.getHeight());
            lbX.setText("x = " + imageUploaded.getWidth());
            ImageIcon icon = new ImageIcon(imageUploaded);
            imageLabel.setIcon(icon);

        }
    }//GEN-LAST:event_btnUploadImageActionPerformed

    private void btnRotateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRotateActionPerformed
        if (imageUploaded == null) {
            return;
        }
        imageUploaded = imageController.rotate(imageUploaded, (int)rotatingDegreesInCelcius.getValue());
        ImageIcon icon = new ImageIcon(imageUploaded);
        imageLabel.setIcon(icon);
    }//GEN-LAST:event_btnRotateActionPerformed

    private void btnScaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnScaleActionPerformed
        if (imageUploaded == null) {
            return;
        }

        if (tfScaleWidth.getText().equals(scaleWidthHolder.getTextoHolder()) || tfScaleHeigth.getText().equals(scaleHeigthHolder.getTextoHolder())) {
            return;
        }

        if (tfScaleWidth.getText().isEmpty() || tfScaleHeigth.getText().isEmpty()) {
            return;
        }

        imageUploaded = imageController.scale(
            imageUploaded,
            Integer.parseInt(tfScaleWidth.getText()),
            Integer.parseInt(tfScaleHeigth.getText())
        );
        
        lbY.setText("y = " + imageUploaded.getHeight());
        lbX.setText("x = " + imageUploaded.getWidth());
        
        ImageIcon icon = new ImageIcon(imageUploaded);
        imageLabel.setIcon(icon);
    }//GEN-LAST:event_btnScaleActionPerformed

    private void btnCropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCropActionPerformed
        if (imageUploaded == null) {
            return;
        }

        if (tfCropX.getText().equals(cropXHolder.getTextoHolder())
            || tfCropY.getText().equals(cropYHolder.getTextoHolder())
            || tfCropWidth.getText().equals(cropWidthHolder.getTextoHolder())
            || tfCropHeigth.getText().equals(cropHeigthHolder.getTextoHolder())) {
            return;
        }

        if (tfCropX.getText().isEmpty()
            || tfCropY.getText().isEmpty()
            || tfCropWidth.getText().isEmpty()
            || tfCropHeigth.getText().isEmpty()) {
            return;
        }

        imageUploaded = imageController.crop(
            imageUploaded,
            Integer.parseInt(tfCropX.getText()),
            Integer.parseInt(tfCropY.getText()),
            Integer.parseInt(tfCropWidth.getText()),
            Integer.parseInt(tfCropHeigth.getText())
        );

//        currentHeight.setText("Height(" + imageUploaded.getHeight() + ")");
        ImageIcon icon = new ImageIcon(imageUploaded);
        imageLabel.setIcon(icon);
    }//GEN-LAST:event_btnCropActionPerformed

    private void btnModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModeActionPerformed
        // TODO add your handling code here
        if (isChangingToDarkMode){
            pnNavBar.setBackground(new Color(35, 38, 39));
            pnWindowPanel.setBackground(new Color(21, 23, 24));
            scrollPanel.setBackground(new Color(242, 242, 242));
            lbDimensions.setForeground(Color.WHITE);
            lbLogo.setForeground(Color.WHITE);
            lbX.setForeground(Color.WHITE);
            lbY.setForeground(Color.WHITE);
            lbMoveImage.setForeground(Color.WHITE);
            lbScalateImage.setForeground(Color.WHITE);
            lbRotateImage.setForeground(Color.WHITE);
            lbCropImage.setForeground(Color.WHITE);
            
        } else{
            pnNavBar.setBackground(new Color(242, 242, 242));
            pnWindowPanel.setBackground(new Color(242, 242, 242));
            scrollPanel.setBackground(new Color(242, 242, 242));
            lbDimensions.setForeground(Color.BLACK);
            lbLogo.setForeground(Color.BLACK);
            lbX.setForeground(Color.BLACK);
            lbY.setForeground(Color.BLACK);
            lbMoveImage.setForeground(Color.BLACK);
            lbScalateImage.setForeground(Color.BLACK);
            lbRotateImage.setForeground(Color.BLACK);
            lbCropImage.setForeground(Color.BLACK);
        }
        isChangingToDarkMode = !isChangingToDarkMode;
    }//GEN-LAST:event_btnModeActionPerformed

    private void tfTranslateYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTranslateYActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTranslateYActionPerformed
    int mouseX = 0;
    int mouseY = 0;
    private void imageLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imageLabelMousePressed
        // TODO add your handling code here:
    mouseX = evt.getX();
    mouseY = evt.getY();
    }//GEN-LAST:event_imageLabelMousePressed


    private void imageLabelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imageLabelMouseDragged

        if(btnDrag.isSelected()){
        int xDifference = evt.getX() - mouseX;
        int yDifference = evt.getY() - mouseY;
        System.out.println("Dragged GetX "+(xDifference));
        System.out.println("Dragged GetY "+(yDifference));
        
        int locationX = imageLabel.getLocation().x + xDifference;
        int locationY = imageLabel.getLocation().y + yDifference;

        imageLabel.setLocation(locationX, locationY);
        
        ImageIcon icon = new ImageIcon(imageUploaded);
        imageLabel.setIcon(icon);
        }
        
    }//GEN-LAST:event_imageLabelMouseDragged

    private void btnDragActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDragActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDragActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ImageEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        java.awt.EventQueue.invokeLater(() -> {
            new ImageEditor().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCrop;
    private javax.swing.JToggleButton btnDrag;
    private javax.swing.JToggleButton btnMode;
    private javax.swing.JButton btnMove;
    private javax.swing.JButton btnRotate;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnScale;
    private javax.swing.JButton btnUploadImage;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel lbCropImage;
    private javax.swing.JLabel lbDimensions;
    private javax.swing.JLabel lbLogo;
    private javax.swing.JLabel lbMoveImage;
    private javax.swing.JLabel lbRotateImage;
    private javax.swing.JLabel lbScalateImage;
    private javax.swing.JLabel lbX;
    private javax.swing.JLabel lbY;
    private javax.swing.JPanel pnNavBar;
    private javax.swing.JPanel pnWindowPanel;
    private javax.swing.JSpinner rotatingDegreesInCelcius;
    private javax.swing.JScrollPane scrollPanel;
    private javax.swing.JTextField tfCropHeigth;
    private javax.swing.JTextField tfCropWidth;
    private javax.swing.JTextField tfCropX;
    private javax.swing.JTextField tfCropY;
    private javax.swing.JTextField tfScaleHeigth;
    private javax.swing.JTextField tfScaleWidth;
    private javax.swing.JTextField tfTranslateX;
    private javax.swing.JTextField tfTranslateY;
    // End of variables declaration//GEN-END:variables
}
